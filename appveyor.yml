image: Visual Studio 2017
clone_folder: c:\projects\aladyn

environment:
  WORKSPACE: C:\projects
  matrix:
  #- platform: PGI1910
  #  COMPILER: pgi
  #  GENERATOR: "NMake Makefiles"
  #  VCPKG_DEFAULT_TRIPLET: x64-windows
  #- platform: Cygwin64
  #  COMPILER: cygwin
  #  CYGWIN_NOWINPATH: yes
  #  BASH: C:\cygwin64\bin\bash -c
  - platform: MSYS64
    COMPILER: msys2
    BASH: C:\msys64\usr\bin\bash -lc

matrix:
  allow_failures:
    - platform: PGI1910
    - platform: Cygwin64
    - platform: MSYS64

init:
  #- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  #initial setup
  - if [%COMPILER%]==[cygwin] SET "PATH=C:\cygwin64\bin;C:\cygwin64\usr\bin;%PATH%"
  - if [%COMPILER%]==[cygwin] SET PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if [%COMPILER%]==[msys2]  SET PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if [%COMPILER%]==[pgi] cinst cmake git 7zip
  - if [%COMPILER%]==[pgi] SET "PATH=C:\Program Files\CMake\bin;%PATH%"
  - if [%COMPILER%]==[pgi] call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
  - cd %WORKSPACE%
  #prepare the silent install for PGI 19.10
  - if [%COMPILER%]==[pgi] echo [Application] > setup.iss
  - if [%COMPILER%]==[pgi] echo Name=PGI Workstation 19.10 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Version=19.10 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Company=The Portland Group >> setup.iss
  - if [%COMPILER%]==[pgi] echo Lang=0409 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-DlgOrder] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg0={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdWelcome-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Count=10 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg1={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdLicense2Rtf-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg2={89F281D6-89B4-4CBA-8342-7A7800CB4771}-AskOptions-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg3={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdRegisterUser-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg4={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdAskDestPath-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg5={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdAskDestPath-1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg6={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdSelectFolder-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg7={89F281D6-89B4-4CBA-8342-7A7800CB4771}-AskOptions-1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg8={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdStartCopy-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Dlg9={89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdFinish-0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdWelcome-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdLicense2Rtf-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-AskOptions-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Sel-0=0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Sel-1=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdRegisterUser-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo szName=user >> setup.iss
  - if [%COMPILER%]==[pgi] echo szCompany=company >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdAskDestPath-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo szDir=C:\Program Files\PGI\ >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdAskDestPath-1] >> setup.iss
  - if [%COMPILER%]==[pgi] echo szDir=C:\temp >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdSelectFolder-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo szFolder=PGI Workstation >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-AskOptions-1] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Sel-0=0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo Sel-1=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdStartCopy-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo [{89F281D6-89B4-4CBA-8342-7A7800CB4771}-SdFinish-0] >> setup.iss
  - if [%COMPILER%]==[pgi] echo Result=1 >> setup.iss
  - if [%COMPILER%]==[pgi] echo bOpt1=0 >> setup.iss
  - if [%COMPILER%]==[pgi] echo bOpt2=0 >> setup.iss

  #download & install PGI
  - if [%COMPILER%]==[pgi] curl --location --referer "http://www.pgroup.com/products/community.htm" "https://www.pgroup.com/support/downloader.php?file=pgi-community-windows-x64" -o pgiws64-1910.exe
  - if [%COMPILER%]==[pgi] %WORKSPACE%\pgiws64-1910.exe /s /f1"%WORKSPACE%\setup.iss"

  # MPI runtime for MS-MPI 10 (vcpkg)
  - ps: if($env:COMPILER -eq "pgi") { Invoke-WebRequest https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe -OutFile $env:WORKSPACE\msmpisetup.exe }
  - if [%COMPILER%]==[pgi] %WORKSPACE%\msmpisetup.exe -unattend

  - if [%COMPILER%]==[pgi] cd C:\Tools\vcpkg
  - if [%COMPILER%]==[pgi] git pull
  - if [%COMPILER%]==[pgi] bootstrap-vcpkg.bat
  - cd %WORKSPACE%\
  - if [%COMPILER%]==[pgi] vcpkg integrate install
  - if [%COMPILER%]==[pgi] vcpkg install fftw3

  #- if [%COMPILER%]==[pgi] vcpkg install msmpi    # MS-MPI 10 SDK, requires update on vcpkg
  #- ps: if($env:COMPILER -eq "pgi") { Invoke-WebRequest https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisdk.msi -OutFile $env:WORKSPACE\msmpisdk.exe }
  #- if [%COMPILER%]==[pgi] %WORKSPACE%\msmpisdk.exe -unattend

  #download & install libs for cygwin
  - cd %WORKSPACE%
  - mkdir cygwin-downloads
  - ps: if($env:COMPILER -eq "cygwin") { Invoke-WebRequest https://cygwin.com/setup-x86_64.exe -OutFile $env:WORKSPACE\cygwin-setup.exe }
  - if [%COMPILER%]==[cygwin] %WORKSPACE%\cygwin-setup.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --upgrade-also --root C:\cygwin64 --local-package-dir %WORKSPACE%\cygwin-downloads --packages libopenmpi-devel,cmake,fftw3,libfftw3-devel,libboost-devel,zlib-devel,gcc-fortran
  - if [%COMPILER%]==[msys2] %BASH% "pacman -Syu --noconfirm"
  - if [%COMPILER%]==[msys2] %BASH% "pacman -R --noconfirm mingw-w64-x86_64-gcc-ada mingw-w64-x86_64-gcc-objc"
  - if [%COMPILER%]==[msys2] %BASH% "pacman -Sy --noconfirm mingw-w64-x86_64-msmpi mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-gcc-libgfortran mingw-w64-x86_64-fftw"

  #get ready for build
  - cd %WORKSPACE%\aladyn\
  - mkdir build
  - cd build
  - if [%COMPILER%]==[pgi] set PGI=%PROGRAMFILES%\PGI
  - if [%COMPILER%]==[pgi] set PATH=%PROGRAMFILES%\PGI\flexlm;%PATH%
  - if [%COMPILER%]==[pgi] set PATH=%PROGRAMFILES%\PGI\win64\19.10\bin;%PATH%
  - if [%COMPILER%]==[pgi] set PATH=%PATH%;.
  - if [%COMPILER%]==[pgi] set FLEXLM_BATCH=1
  - if [%COMPILER%]==[pgi] echo PGI 19.10 Enabled

build_script:
  - if [%COMPILER%]==[pgi]    cmake -G "%GENERATOR%" "-DCMAKE_TOOLCHAIN_FILE=C:\Tools\vcpkg\scripts\buildsystems\vcpkg.cmake" "-DVCPKG_TARGET_TRIPLET=%VCPKG_DEFAULT_TRIPLET%" "-DCMAKE_BUILD_TYPE=Release" ..
  - if [%COMPILER%]==[pgi]    cmake --build . --target install

  - if [%COMPILER%]==[msys2]  %BASH% "cmake -G \"MSYS Makefiles\" -DCMAKE_BUILD_TYPE=Release /c/projects/aladyn"
  - if [%COMPILER%]==[msys2]  %BASH% "cmake --build $(pwd) --target install"

  - if [%COMPILER%]==[cygwin] %BASH% 'cmake -G "Unix Makefiles" "-DCMAKE_BUILD_TYPE=Release" ..'
  - if [%COMPILER%]==[cygwin] %BASH% 'cmake --build . --target install'

on_finish:
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
